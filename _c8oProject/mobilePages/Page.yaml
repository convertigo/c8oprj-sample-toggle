↑isRoot: true
comment: |
  <ul>
  <li>Basic toggles On/Off and color, iOS/MD mode and [enableOnOffLabels] property</li>
  <li>Theming toggle with text, color change and binding.</li>
  <li>Text inside toggle.</li>
  </ul>
  <br/>
  <img src="./doc/toggle_samples.png">
preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        
segment: path-to-xfirst
title: First page
↓Header [ngx.components.UIDynamicElement-1491634212350]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1491634231108]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet1 [ngx.components.UIDynamicElement-1588171103814]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓BackButton [ngx.components.UIDynamicElement-1643993281257]: 
        beanData: '{"ionBean":"BackButton"}'
        tagName: ion-back-button
      ↓MenuButton [ngx.components.UIDynamicElement-1588172846908]: 
        beanData: '{"ionBean":"MenuButton"}'
        tagName: ion-menu-button
    ↓BarTitle [ngx.components.UIDynamicElement-1491634265317]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [ngx.components.UIText-1491634275121]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Page
    ↓ButtonSet2 [ngx.components.UIDynamicElement-1588170811054]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1588170817806]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1588170831166]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:ellipsis-vertical",
             "IconMdName": "plain",
             "IconIosName": "plain"
            }'
          tagName: ion-icon
↓Content [ngx.components.UIDynamicElement-1489674805352]: 
  beanData: '{"ionBean":"Content"}'
  comment: Page content
  tagName: ion-content
  ↓Grid_toggle_basic [ngx.components.UIDynamicElement-1678888169152]: 
    beanData: '{"ionBean":"Grid","Height":"plain"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1678888169155]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      tagName: ion-row
      ↓GridCol1 [ngx.components.UIDynamicElement-1678888169167]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678888237620]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain"
            }'
          tagName: ion-toggle
      ↓GridCol2 [ngx.components.UIDynamicElement-1678897156444]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678897156447]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "Checked": "plain:true"
            }'
          tagName: ion-toggle
      ↓GridCol3 [ngx.components.UIDynamicElement-1678897215001]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678897215004]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "IonColor": "plain:warning",
             "Checked": "plain:true"
            }'
          tagName: ion-toggle
      ↓GridCol4 [ngx.components.UIDynamicElement-1678897242081]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678897242084]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "IonColor": "plain:danger",
             "Checked": "plain:true"
            }'
          tagName: ion-toggle
      ↓GridCol5 [ngx.components.UIDynamicElement-1678897254116]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678897254119]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "IonColor": "plain:success",
             "Checked": "plain:true"
            }'
          tagName: ion-toggle
      ↓GridCol6 [ngx.components.UIDynamicElement-1678897839606]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678897839609]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "IonColor": "plain:medium",
             "IonMode": "plain:ios",
             "Checked": "plain:true"
            }'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1678897870279]: 
            attrName: '[enableOnOffLabels]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:true
      ↓GridCol7 [ngx.components.UIDynamicElement-1678898054126]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678898054129]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "IonColor": "plain:secondary",
             "IonMode": "plain:md",
             "Checked": "plain:true"
            }'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1678898054132]: 
            attrName: '[enableOnOffLabels]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:true
  ↓Break [ngx.components.UIDynamicElement-1678897821667]: 
    beanData: '{"ionBean":"Break"}'
    selfClose: true
    tagName: br
  ↓Grid_toggle_custom [ngx.components.UIDynamicElement-1678897037871]: 
    beanData: '{"ionBean":"Grid","Height":"plain"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1678897037874]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1678897037877]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "Size": "plain:auto"
          }'
        tagName: ion-col
        ↓Label [ngx.components.UIDynamicElement-1678897037880]: 
          beanData: '{"ionBean":"Label","IonColor":"script:this.global.isON !== true ? ''danger'': null"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1678897037883]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:OFF
      ↓GridCol1 [ngx.components.UIDynamicElement-1678897037886]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678897037889]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "script:this.global.isON"
            }'
          tagName: ion-toggle
          ↓Style [ngx.components.UIStyle-1678897037892]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '/**
                     * Custom properties (sometimes referred to as CSS variables or cascading variables)
                     * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                     * They are set using custom property notation, e.g.: --main-color: black;
                     * and are accessed using the var() function, e.g.: color: var(--main-color);
                     * You can find below your component''s properties you can customize within the page.
                     * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                     * For more informations see https://ionicframework.com/docs/theming.
                    **/
                    //--background	//Background of the toggle
                    //--background-checked	//Background of the toggle when checked
                    //--border-radius	//Border radius of the toggle track
                    //--handle-background	//Background of the toggle handle
                    //--handle-background-checked	//Background of the toggle handle when checked
                    //--handle-border-radius	//Border radius of the toggle handle
                    //--handle-box-shadow	//Box shadow of the toggle handle
                    //--handle-height	//Height of the toggle handle
                    //--handle-max-height	//Maximum height of the toggle handle
                    //--handle-spacing	//Horizontal spacing around the toggle handle
                    //--handle-transition	//Transition of the toggle handle
                    //--handle-width	//Width of the toggle handle
                    	width: 95%;
                    	padding: 12px;
                    	--background: #ddd;
                    	--background-checked: #ddd;
                    
                    	--handle-background: #eb7769;
                    	--handle-background-checked: #95c34e;
                    
                    	--handle-width: 25px;
                    	--handle-height: 27px;
                    	--handle-max-height: auto;
                    	--handle-spacing: 6px;
                    
                    	--handle-border-radius: 4px;
                    	--handle-box-shadow: none;
                    
                      /* Required for iOS handle to overflow the height of the track */
                    	overflow: visible;
                    	contain: none;
                    '
      ↓GridCol2 [ngx.components.UIDynamicElement-1678897037895]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "Size": "plain:auto"
          }'
        tagName: ion-col
        ↓Label [ngx.components.UIDynamicElement-1678897037898]: 
          beanData: '{"ionBean":"Label","IonColor":"script:this.global.isON === true ? ''success'': null"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1678897037901]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:ON
    ↓GridRow1 [ngx.components.UIDynamicElement-1678897037904]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1678897037907]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Label [ngx.components.UIDynamicElement-1678897037910]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1678897037913]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: 'plain:Toggle Binding Value: '
          ↓Text1 [ngx.components.UIText-1678897037916]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Global","project":"toggle","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.isON","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓Break1 [ngx.components.UIDynamicElement-1678898191341]: 
    beanData: '{"ionBean":"Break"}'
    selfClose: true
    tagName: br
  ↓Grid_toggle_custom1 [ngx.components.UIDynamicElement-1678898201608]: 
    beanData: '{"ionBean":"Grid","Height":"plain"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1678898201611]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      tagName: ion-row
      ↓GridCol1 [ngx.components.UIDynamicElement-1678898201623]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓ToggleButton [ngx.components.UIDynamicElement-1678898201626]: 
          beanData: |
            '{
             "ionBean": "Toggle",
             "ControlName": "plain:name1678888237620",
             "DoubleBinding": "plain",
             "Value": "plain:wifi-status"
            }'
          tagName: ion-toggle
          ↓Style [ngx.components.UIStyle-1678898201629]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '/**
                     * Custom properties (sometimes referred to as CSS variables or cascading variables)
                     * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                     * They are set using custom property notation, e.g.: --main-color: black;
                     * and are accessed using the var() function, e.g.: color: var(--main-color);
                     * You can find below your component''s properties you can customize within the page.
                     * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                     * For more informations see https://ionicframework.com/docs/theming.
                    **/
                    //--background	//Background of the toggle
                    //--background-checked	//Background of the toggle when checked
                    //--border-radius	//Border radius of the toggle track
                    //--handle-background	//Background of the toggle handle
                    //--handle-background-checked	//Background of the toggle handle when checked
                    //--handle-border-radius	//Border radius of the toggle handle
                    //--handle-box-shadow	//Box shadow of the toggle handle
                    //--handle-height	//Height of the toggle handle
                    //--handle-max-height	//Maximum height of the toggle handle
                    //--handle-spacing	//Horizontal spacing around the toggle handle
                    //--handle-transition	//Transition of the toggle handle
                    //--handle-width	//Width of the toggle handle
                        width: 100px;
                        height: 20px;
                        margin-bottom: 6px;
                        position: relative;
                        color: #ffffff;
                        font-size: 15px;
                        line-height: 31px;
                    
                        --background: #92949c;
                        --background-checked: #556ee6;
                    
                        --handle-background: #ffffff;
                        --handle-background-checked: #ffffff;
                    }
                    
                    .inner-text[aria-checked="false"]{
                    
                       &::after {
                        position: absolute;
                        content: "offline";
                        top: 7px;
                        right: 25px;
                        color: var(--ion-color-danger);
                       }
                    }
                    
                    .inner-text[aria-checked="true"]{
                    
                      &::after {
                        position: absolute;
                        content: "online";
                        top: 7px;
                        left: 25px;
                        color: var(--ion-color-success);
                      }
                    '
          ↓Attr [ngx.components.UIAttribute-1678898667459]: 
            attrName: class
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:inner-text
          ↓Event [ngx.components.UIControlEvent-1678899331961]: 
            attrName: (ionChange)
            eventName: ionChange
            ↓Toast [ngx.components.UIDynamicAction-1678899353290]: 
              beanData: '{"ionBean":"ToastAction","message":"script:JSON.stringify(event.detail)"}'
↓Footer [ngx.components.UIDynamicElement-1491634242460]: 
  beanData: '{"ionBean":"Footer"}'
  comment: Page footer
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1491634317538]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [ngx.components.UIDynamicElement-1588170246138]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓Button1 [ngx.components.UIDynamicElement-1491634332730]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1491634340354]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Action 1
    ↓ButtonSet1 [ngx.components.UIDynamicElement-1588170269871]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button2 [ngx.components.UIDynamicElement-1491634376874]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1491634383107]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Action 2
↓PageEvent [ngx.components.UIPageEvent-1678896908661]: 
  ↓SetGlobal [ngx.components.UIDynamicAction-1678896919689]: 
    beanData: |
      '{
       "ionBean": "SetGlobalAction",
       "Property": "plain:isON",
       "Value": "script:undefined"
      }'